{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <flash-messages></flash-messages>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from \"@angular/core\";\n\n// decorator allows us to add the selector, which is used to select the component in html\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  title = \"Mean Stack, Front to Back\";\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppComponent } from \"./app.component\";\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\nimport { LoginComponent } from \"./components/login/login.component\";\nimport { RegisterComponent } from \"./components/register/register.component\";\nimport { HomeComponent } from \"./components/home/home.component\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { ProfileComponent } from \"./components/profile/profile.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\n\n// services import\nimport { ValidateService } from \"./services/validate.service\";\nimport { AuthService } from \"./services/auth.service\";\n\n// guard import\nimport { AuthGuard } from \"./guards/auth.guard\";\n\n// approutes is an object with our actual routes\n// protecting our routes is as simple as passing our guard service's method\nconst appRoutes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n    canActivate: [AuthGuard]\n  }\n];\n\nexport function tokenGetter() {\n  return localStorage.getItem(\"id_token\");\n}\n\n// services need to be added to 'providers' array\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: tokenGetter\n      }\n    }),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 class=\\\"page-header\\\">Your Dashboard</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1>Mean Authentication App</h1>\\n  <p class=\\\"lead\\\">\\n    Welcome to our custom MEAN Authenication Demo App. This app has been built\\n    from scratch.\\n  </p>\\n  <div>\\n    <a href=\\\"\\\" class=\\\"btn btn-outline-dark mx-2\\\" [routerLink]=\\\"['/register']\\\"\\n      >Register</a\\n    >\\n    <a href=\\\"\\\" class=\\\"btn btn-outline-dark\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\n  </div>\\n  <p>Built with plenty of ❤️ and 🍺</p>\\n</div>\\n\\n<!-- div -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <h4>An Express Backend</h4>\\n    <p>Node.js/Express, with Mongoose for ORM</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h4>Built With the Angular CLI</h4>\\n    <p>Used for generated components, services and routes.</p>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h4>...And Passport with JSONWebTokens</h4>\\n    <p>\\n      For a full-featured Authentication system, utilizing a JWTStrategy to\\n      store user data, protect routes and log in/out.\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n<form (submit)=\\\"onLoginSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"username\\\"\\n      name=\\\"name\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input\\n      type=\\\"password\\\"\\n      [(ngModel)]=\\\"password\\\"\\n      name=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\" />\\n</form>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n  // component properties\n  username: String;\n  password: String;\n\n  //inject auth service as dependency\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {}\n\n  // linked via the ngModel directive\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    // returns observable, subscribe\n    this.authService.authenticateUser(user).subscribe(data => {\n      // data = {success, token, {user}} - we'll store this with localStorage\n      if (data.success) {\n        this.authService.storeUserData(data.token, data.user);\n        this.flashMessage.show(\"Logged in successfully\", {\n          cssClass: \"alert-success\",\n          timeout: 3000\n        });\n        this.router.navigate([\"dashboard\"]);\n      } else {\n        // note that the messages come from our server, served up as { msg: ...}\n        this.flashMessage.show(data.msg, {\n          cssClass: \"alert-danger\",\n          timeout: 3000\n        });\n        this.router.navigate([\"login\"]);\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Mean Stack Auth App Demo</a>\\n  <button\\n    class=\\\"navbar-toggler\\\"\\n    type=\\\"button\\\"\\n    data-toggle=\\\"collapse\\\"\\n    data-target=\\\"#navbarsExampleDefault\\\"\\n    aria-controls=\\\"navbarsExampleDefault\\\"\\n    aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\"\\n  >\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li\\n        class=\\\"nav-item\\\"\\n        [routerLinkActive]=\\\"['active']\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n      >\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/']\\\">Home</a>\\n      </li>\\n    </ul>\\n\\n    <ul class=\\\"navbar-nav\\\">\\n      <li\\n        *ngIf=\\\"!authService.loggedIn()\\\"\\n        class=\\\"nav-item\\\"\\n        [routerLinkActive]=\\\"['active']\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n      >\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\n      </li>\\n      <li\\n        *ngIf=\\\"!authService.loggedIn()\\\"\\n        class=\\\"nav-item\\\"\\n        [routerLinkActive]=\\\"['active']\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n      >\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\">Profile</a>\\n      </li>\\n      <li\\n        *ngIf=\\\"authService.loggedIn()\\\"\\n        class=\\\"nav-item\\\"\\n        [routerLinkActive]=\\\"['active']\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n      >\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLink]=\\\"['/login']\\\"\\n          >Login</a\\n        >\\n      </li>\\n      <li\\n        *ngIf=\\\"authService.loggedIn()\\\"\\n        class=\\\"nav-item\\\"\\n        [routerLinkActive]=\\\"['active']\\\"\\n        [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\n      >\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          [routerLink]=\\\"['/register']\\\"\\n          >Register</a\\n        >\\n      </li>\\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!authService.loggedIn()\\\">\\n        <a\\n          class=\\\"nav-link\\\"\\n          [routerLinkActive]=\\\"['active']\\\"\\n          (click)=\\\"onLogoutClick()\\\"\\n          href=\\\"#\\\"\\n          >Logout</a\\n        >\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"./navbar.component.html\",\n  styleUrls: [\"./navbar.component.css\"]\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {}\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show(\"Successfully logged out\", {\n      cssClass: \"alert-success\",\n      timeout: 2000\n    });\n\n    this.router.navigate([\"/login\"]);\n    return false;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- make sure there's a user -->\\n<div *ngIf=\\\"user\\\">\\n  <h2 class=\\\"page-header\\\">{{ user.name }}</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Username: {{ user.username }}</li>\\n    <li class=\\\"list-group-item\\\">Email: {{ user.email }}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.css\"]\n})\nexport class ProfileComponent implements OnInit {\n  // class properties\n  user: Object;\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    // load the user, when the component initializes\n    this.authService.getProfile().subscribe(\n      profile => {\n        this.user = profile.user;\n      },\n      // observables throw errs\n      err => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<!-- to be able to capture values, we use ngModel -->\\n<!--\\n  this requires us to also create an attribute with the same name as what we've set ngModel to\\n-->\\n\\n<!-- after this, we create an event on the form for submit -->\\n\\n<h2 class=\\\"page-header\\\">Register</h2>\\n<form (submit)=\\\"onRegisterSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Name</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input\\n      type=\\\"text\\\"\\n      [(ngModel)]=\\\"username\\\"\\n      name=\\\"username\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input\\n      type=\\\"password\\\"\\n      [(ngModel)]=\\\"password\\\"\\n      name=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n    />\\n  </div>\\n\\n  <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n</form>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ValidateService } from \"../../services/validate.service\";\nimport { FlashMessagesService } from \"angular2-flash-messages\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"./register.component.html\",\n  styleUrls: [\"./register.component.css\"]\n})\nexport class RegisterComponent implements OnInit {\n  // user properties\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  // inject service\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  onRegisterSubmit() {\n    // keyword 'this' works because the properties are bound to the input with the ngModel directive\n\n    // make an object\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    };\n\n    // Required Fields\n    if (!this.validateService.validateRegister(user)) {\n      // some fields were missing\n      this.flashMessage.show(\"Please fill in all fields\", {\n        cssClass: \"alert-danger\",\n        timeout: 2000\n      });\n      return false;\n    }\n\n    if (!this.validateService.validateEmail(user.email)) {\n      // some fields were missing\n      this.flashMessage.show(\"Please use a valid email address\", {\n        cssClass: \"alert-danger\",\n        timeout: 2000\n      });\n      return false;\n    }\n    console.log(\"submission complete\");\n\n    // Register a user - subscribe because it's an observable\n    this.authService.registerUser(user).subscribe(data => {\n      if (data.success) {\n        this.flashMessage.show(\"You are now registered and can log in\", {\n          cssClass: \"alert-success\"\n        });\n        //redirect\n        this.router.navigate([\"/login\"]);\n      } else {\n        this.flashMessage.show(\"Unable to register. Please try again.\", {\n          cssClass: \"alert-danger\"\n        });\n        //redirect\n        this.router.navigate([\"/register\"]);\n      }\n    });\n  }\n}\n","// Setup similiarly to a service\n\nimport { Injectable } from \"@angular/core\";\nimport { Router, CanActivate } from \"@angular/router\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  // if the user is logged in, the page can be accessed. If not, redirect them to login.\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      // meaning the token check returned false, token was NOT expired\n      this.router.navigate([\"/login\"]);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthService {\n  // service properties\n  authToken: any;\n  user: any;\n\n  //public jwtHelper: JwtHelperService\n  constructor(private http: HttpClient, public jwtHelper: JwtHelperService) {}\n\n  registerUser(user) {\n    // make a post request to register\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n\n    // return an observable - we subscribe to this with rxjs\n    return this.http\n      .post(\"users/register\", user, httpOptions)\n      .pipe(map((res: any) => res));\n  }\n\n  authenticateUser(user) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    // if successful, returns token to store and user info\n    return this.http\n      .post(\"users/authenticate\", user, httpOptions)\n      .pipe(map((res: any) => res));\n  }\n\n  getProfile() {\n    // using our loadToken method to fetch token from localStorage\n    this.loadToken();\n    const httpOptions = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        Authorization: this.authToken\n      })\n    };\n    return this.http\n      .get(\"users/profile\", httpOptions)\n      .pipe(map((res: any) => res));\n  }\n\n  storeUserData(token, user) {\n    // id_token is what JWT looks for when we auth with passport\n    localStorage.setItem(\"id_token\", token);\n    // localStorage can only store a string, so we need to convert\n    localStorage.setItem(\"user\", JSON.stringify(user));\n\n    // set our property values\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem(\"id_token\");\n    this.authToken = token;\n  }\n\n  // Uses angular2-jwt to determine whether or not the user is loggedIn\n  loggedIn() {\n    // if you don't pass the token, jwt assumes the default one, which has a name of 'token' whereas we set the token to id_token in local storage...\n    return this.jwtHelper.isTokenExpired(this.authToken);\n  }\n\n  logout() {\n    // set our properties to null, clear out localStorage\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ValidateService {\n  constructor() {}\n\n  // gets user object from register component\n  validateRegister(user) {\n    if (\n      user.name === undefined ||\n      user.email === undefined ||\n      user.username === undefined ||\n      user.password === undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    // regex pulled from stack overflow\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}